generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String
  password  String
  status    UserStatus @default(UNVERIFIED)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  projects  Project[]
  userOtps  UserOTP[]

  @@map("users")
}

enum UserStatus {
  VERIFIED
  UNVERIFIED
  PENDING

  @@map("user_status")
}

model Project {
  id          String        @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ownerId     String
  owner       User          @relation(fields: [ownerId], references: [id])
  tasks       ProjectTask[]

  @@map("projects")
}

model ProjectTask {
  id          String            @id @default(uuid())
  title       String
  description String?
  urgent      Boolean
  important   Boolean
  isCompleted ProjectTaskStatus @default(TODO)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  projectId   String
  project     Project           @relation(fields: [projectId], references: [id])

  @@map("project_tasks")
}

enum ProjectTaskStatus {
  TODO
  IN_PROGRESS
  COMPLETED

  @@map("project_task_status")
}

enum UserOTPType {
  VERIFICATION
  RESET_PASSWORD

  @@map("user_otp_type")
}

enum UserOTPStatus {
  ACTIVE
  EXPIRED
  ARCHIVED

  @@map("user_otp_status")
}

model UserOTP {
  id        String        @id @default(uuid())
  user      User          @relation(fields: [userId], references: [id])
  userId    String
  type      UserOTPType
  code      String
  status    UserOTPStatus
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  @@map("user_otps")
}
